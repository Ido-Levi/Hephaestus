description: |
  FOCUS: Explore ONE specific solution approach and write implementation.md.
  Each Phase 2 task explores a DIFFERENT potential fix. Your job is to investigate
  your assigned approach, find the exact code locations, and write a detailed
  implementation.md file explaining EXACTLY how to fix the issue with your approach.

Done_Definitions:
  - Investigated the specific approach assigned in your task description
  - Exact files and functions for YOUR approach identified
  - implementation.md file created with step-by-step fix instructions
  - Code snippets showing exactly what to change included
  - Risks and dependencies for your approach documented
  - A Phase 3 task created referencing your implementation.md

working_directory: "/Users/idol/SWEBench_Hep_Problems/sphinx-doc__sphinx-7757/sphinx"

#validation:
#  enabled: true
#  criteria:
#    - description: "Implementation plan documented"
#      check_type: "file_exists"
#      target: ["implementation_plan.md", "investigation_results.md", "code_analysis.md"]
#      evidence_required: true
#
#    - description: "Target files and functions identified"
#      check_type: "file_contains"
#      target: "implementation_plan.md"
#      pattern: ["file:", "function:", "class:", "method:", "line"]
#
#    - description: "Code patterns and conventions documented"
#      check_type: "manual_verification"
#      evidence_required: true
#
#    - description: "Test structure analyzed"
#      check_type: "file_contains"
#      target: "implementation_plan.md"
#      pattern: ["test", "Test", "test_", "_test"]
#
#    - description: "Dependencies and risks identified"
#      check_type: "manual_verification"
#      evidence_required: true
#
#  validator_instructions: |
#    Ensure the investigation has:
#    - Found the EXACT locations needing changes
#    - Understood the surrounding code context
#    - Identified the right approach matching project patterns
#    - Located relevant tests that will verify the fix
#    - Considered potential side effects
#    - Created a clear, actionable implementation plan

Additional_Notes: |
  🎯 YOUR MISSION: Write implementation.md for YOUR specific approach!

  CRITICAL: CREATE implementation.md FILE:
  ═══════════════════════════════════════════════════════════════════════
  You MUST create an implementation.md file with:

  1. **Approach**: Description of your specific solution approach
  2. **Files to Modify**: List exact files and line numbers
  3. **Changes Required**:
     ```python
     # Current code (line X-Y in file.py):
     def current_function():
         ...

     # Change to:
     def fixed_function():
         ...
     ```
  4. **Why This Works**: Explanation of why your approach fixes the issue
  5. **Risks**: Any potential side effects or concerns

  THEN create ONE Phase 3 task:
  "Phase 3: Implement fix using approach from implementation.md"
  Include phase_id=3 and reference the implementation.md path!
  ═══════════════════════════════════════════════════════════════════════

  Investigation Strategy:
  1. Start from the reproduction case or test that demonstrates the issue
  2. Trace through the code execution path
  3. Find the exact functions/methods that need modification
  4. Understand how similar issues are handled elsewhere
  5. Check for existing tests that cover this area

  Use various search strategies:
  - grep/rg for error messages, function names, class names
  - Look for test files related to the issue
  - Check imports to understand dependencies
  - Read docstrings and comments for context

  IMPORTANT: Don't just find the general area - locate the EXACT lines of code
  that need to be changed. Your implementation plan should be specific enough
  that Phase 3 can execute it without additional searching.

  Use save_memory to document:
  - Exact file paths and line numbers
  - Current implementation logic
  - Why the current code is wrong/incomplete
  - How to fix it following project patterns

Outputs: |
  - implementation.md containing:
    * Your specific approach description
    * Exact files and line numbers to modify
    * Before/after code snippets showing the changes
    * Clear explanation of why this approach works
    * Any risks or side effects identified
  - A single Phase 3 task to implement YOUR approach

Next_Steps: |
  Create ONE Phase 3 task that will implement the solution from your implementation.md.
  The Phase 3 agent will follow your implementation.md exactly. If the implementation
  doesn't work, Phase 3 will create a new Phase 2 task to explore a different approach.